{"name":"Git-mirror","tagline":"Git Mirroring Proxy tools","body":"Simple git-mirror proxy tools\r\n=============================\r\n\r\nSet of executable scripts acting as a proxy between a\r\nmirror git server and a master git server.\r\n\r\nSee the INSTALL file for installation and configuration instructions.\r\n\r\nInstalling on a mirror server these tools will have the effect of taking\r\nprecedence for the execution of the three git commands used server side\r\nto implement a client fecth or a client push/archive. The only commands\r\nexecuted on the git server side are:\r\n- git-upload-pack (when the client does a git fetch or alike),\r\n- git-upload-archive (when the client does a git archive),\r\n- git-receive-pack (when the client does a git push or alike).\r\n\r\nThese three command are provided by this package and will act\r\nas a proxy between the mirror git server and the master git server.\r\n\r\nBy default the proxy will server only read accesses, it can also be\r\nconfigured in write mode and will serve write as write-through to the\r\nmaster server being mirrored.\r\n\r\nIn the case of the upload commands (a git client fetch) , when the\r\nrepository exists on the mirror git server where these commands\r\nare executed the mirror will serve the upload directly. Othewise\r\nthe upload will be executed remotely on the master git server.\r\n\r\nIn the case of the receive command (a git client push), when the\r\nepository exists on the mirror git server and is not a mirrored\r\nrepository, the receive will be served directly, otherwise rhe\r\nreceive will be executed remotely on the master git server.\r\n\r\nIn order to transfer the execution to the master, a ssh connection is\r\nestablished under the credentials defined in the configuration with\r\nmaster_server, master_user and master_identity.\r\n\r\nIt means that these credentials must have read and write accesses\r\nrights throuh the master git server authentification layer.\r\n\r\nActually it means that the identity used for the master git server\r\naccesses will not be the one of the client actually doing the\r\nconnection to the mirror git server. This is generally not an\r\nissue for ssh based git authentification layers such as gitolite\r\nor other layers using ssh pub keys as authentication check.\r\n\r\nThough, in order to avoid confusing authentification errore, the\r\nmaster_user must be setup to have sufficient credentials to\r\ncover the expected authentification of users that mean to connect\r\ntransparently to either the master server or the mirror server.\r\n\r\nFor git authentification layers such as gerrit, additional checks\r\nmay be done (such as the ssh login name must be associated with the\r\nright ssh login key as found in the gerrit database). In these\r\ncases this package may not be able to access the master server for\r\nwrite and the write-through mode must be kept disabled. Then\r\nthe client must explicitly set the actual master server in the\r\ncommands or make an alias in the git configuration.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}